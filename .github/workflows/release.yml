# name: Deploy

# on:
#   push:
#     branches: [ git_action ]

# jobs:
#   distribute:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v2

#       - uses: actions/setup-ruby@v1
#         with:
#           ruby-version: '2.6'
          
#       - name: Install bundle
#         run: |
#           bundle config path vendor/bundle
#           bundle install --jobs 4 --retry 3
          
#       - name: Configure Keystore
#         run: |
#           echo "$ANDROID_KEYSTORE_FILE" > keystore.jks.b64
#           base64 -d -i keystore.jks.b64 > android/app/upload-keystore1.jks
#           echo "storeFile=keystore" >> android/keystore.properties
#           echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> android/keystore.properties
#           echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> android/keystore.properties
#           echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> android/keystore.properties
#         env:
#           ANDROID_KEYSTORE_FILE: ${{ secrets.ANDROID_KEYSTORE_FILE }}
#           KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
#           KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
#           KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}

#       - name: Create Google Play Config file
#         run : |
#           echo "$PLAY_CONFIG_JSON" > play_config.json.b64
#           base64 -d -i play_config.json.b64 > play_config.json
#         env:
#           PLAY_CONFIG_JSON: ${{ secrets.PLAY_CONFIG_JSON }}

#       - name: Run Fastlane #Give a name to your action
#         uses: maierj/fastlane-action@v1.4.0 #Use this plugin developed by the community for the fastlane actions
#         with:
#         lane: upload_to_google_play_store #Here you can define the lane need to be executed with the work flow.
#         subdirectory: android #mention if the fastlane folder is inside the android folder.    
#       - name: Distribute app to Beta track üöÄ
#         run: bundle exec fastlane beta          

name: Flutter CICD # action name
on:
push:
tags:
- ‚Äúv*‚Äù
jobs:
build:
runs-on: ubuntu-latest
env:
KEY_JKS: ${{ secrets.ANDROID_KEYSTORE_FILE }}
KEY_PATH: ‚Äúupload-keystore1.jks‚Äù
KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
ALIAS_PASSWORD: ${{ secrets.KEYSTORE_KEY_ALIAS }}
steps:
- uses: actions/checkout@v2
- uses: actions/setup-java@v2
with:
distribution: 'adopt'
java-version: '12.x'
- name: Create key file
run: echo $ANDROID_KEYSTORE_FILE | base64 -di > upload-keystore1.jkss
- uses: subosito/flutter-action@v1
with:
flutter-version: '2.10.2' # change accordingly
- run: flutter pub get
- run: flutter build apk ‚Äî release ‚Äî split-per-abi
- run: flutter build appbundle
- name: Create github artifact release # disable this to save storage
uses: ncipollo/release-action@v1
with:
artifacts: ‚Äúbuild/app/outputs/apk/release/*.apk,build/app/outputs/bundle/release/app-release.aab‚Äù
token: ${{ secrets.GITHUB_TOKEN }} # this is automatically provided by github
commit:
- name: Upload app bundle artifact
uses: actions/upload-artifact@v2
with:
name: appbundle
path: build/app/outputs/bundle/release/app-release.aab

- name: Run Fastlane #Give a name to your action
uses: maierj/fastlane-action@v1.4.0 #Use this plugin developed by the community for the fastlane actions
with:
lane: upload_to_google_play_store #Here you can define the lane need to be executed with the work flow.
subdirectory: android #mention if the fastlane folder is inside the android folder.